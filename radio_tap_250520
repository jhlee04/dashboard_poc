
1. tab1과 tab2 구조를 st.radio() 탭으로 변경 (위치: 본문 상단)


2. 탭에 따라 사이드바 필터를 다르게 표시


3. tab2에서는 중점/일반 과제 모두 회의록 기반으로 표시 (CSV 파일 분리)




---

✅ 전체 코드 변화 요약

① 라디오 탭 추가 (본문 상단)

st.title("📋 과제 대시보드")

selected_tab = st.radio(
    label="탭 선택",
    options=["📊 월별 정량 대시보드", "📝 회의록 기반 과제 현황"],
    horizontal=True,
    label_visibility="collapsed"
)


---

② 사이드바 필터: 탭에 따라 분기

with st.sidebar:
    if selected_tab == "📊 월별 정량 대시보드":
        st.header("📅 월별 필터")
        selected_month = st.selectbox("월 선택", sorted(df["월"].unique()), key="month_tab1")
    
    elif selected_tab == "📝 회의록 기반 과제 현황":
        st.header("🗂 회의록 필터")

        selected_category = st.radio("과제 구분", ["중점과제", "일반과제"], horizontal=True, key="category_tab2")

        # LLM용 데이터 파일 선택
        file_map = {
            "중점과제": "report_llm_core.csv",
            "일반과제": "report_llm_general.csv"
        }
        llm_df = pd.read_csv(file_map[selected_category])

        selected_dept = st.selectbox("부서", ["전체"] + sorted(llm_df["부서"].dropna().unique()), key="dept_tab2")
        if selected_dept == "전체":
            team_options = sorted(llm_df["팀"].dropna().unique())
        else:
            team_options = sorted(llm_df[llm_df["부서"] == selected_dept]["팀"].dropna().unique())
        selected_team = st.selectbox("팀", ["전체"] + team_options, key="team_tab2")

        filtered_task_pool = llm_df.copy()
        if selected_dept != "전체":
            filtered_task_pool = filtered_task_pool[filtered_task_pool["부서"] == selected_dept]
        if selected_team != "전체":
            filtered_task_pool = filtered_task_pool[filtered_task_pool["팀"] == selected_team]

        selected_tasks = st.multiselect("📌 과제 선택", sorted(filtered_task_pool["과제명"].dropna().unique()), key="task_tab2")

        show_all_meetings = st.checkbox("📆 전체 회의 흐름 보기", value=False)


---

③ 본문 내용: 탭에 따라 내용 표시

if selected_tab == "📊 월별 정량 대시보드":
    st.subheader(f"📊 정량 기반 대시보드 – {selected_month}")
    # 여기에 기존 tab1 내용 복사 (filtered_df = df[df["월"] == selected_month] ...)

elif selected_tab == "📝 회의록 기반 과제 현황":
    st.subheader(f"📝 {selected_category} 회의록 기반 과제 현황")

    # 필터 적용
    filtered_llm = llm_df.copy()
    if selected_dept != "전체":
        filtered_llm = filtered_llm[filtered_llm["부서"] == selected_dept]
    if selected_team != "전체":
        filtered_llm = filtered_llm[filtered_llm["팀"] == selected_team]
    if selected_tasks:
        filtered_llm = filtered_llm[filtered_llm["과제명"].isin(selected_tasks)]

    filtered_llm = filtered_llm.sort_values("회의일", ascending=False)
    if not show_all_meetings:
        filtered_llm = filtered_llm.drop_duplicates(subset=["과제명"], keep="first")

    # 요약 출력 (당신 코드 그대로 유지)
    if not filtered_llm.empty:
        ...
    else:
        st.warning("조건에 맞는 회의록 데이터가 없습니다.")


---

✅ 구조 요약 그림

[📋 과제 대시보드]          ← st.title()

[ 📊 월별 정량 | 📝 회의록 기반 ]    ← st.radio()

▶ 사이드바
   └ 탭1이면 월 필터
   └ 탭2이면 과제 구분 + 부서/팀/과제명 + 흐름보기 체크박스

▶ 본문 내용
   └ 탭1이면 KPI 시각화
   └ 탭2이면 회의 요약, 액션 아이템


---



물론입니다! st.radio(..., horizontal=True) 자체도 기본적으로 꽤 깔끔하지만,
디자인적으로 더 고급스럽고 탭처럼 보이게 만들고 싶다면, **CSS + st.markdown()**으로 감싸거나, custom HTML 스타일링을 사용하는 것이 가장 효과적이에요.


---

✅ 예쁘게 꾸민 horizontal radio-tab 스타일 예시

1. 심플하고 탭처럼 보이는 디자인 적용

st.markdown("""
<style>
div.radio-tabs > div {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
}
div.radio-tabs label {
    background-color: #f0f0f5;
    border: 1px solid #ccc;
    padding: 10px 20px;
    margin-right: 5px;
    border-radius: 5px;
    cursor: pointer;
    font-weight: 500;
}
div.radio-tabs input:checked + div {
    background-color: #1976D2 !important;
    color: white;
}
</style>
""", unsafe_allow_html=True)

with st.container():
    st.markdown("<div class='radio-tabs'>", unsafe_allow_html=True)
    selected_tab = st.radio(
        label="탭 선택",
        options=["📊 월별 정량 대시보드", "📝 회의록 기반 과제 현황"],
        horizontal=True,
        label_visibility="collapsed",
        key="radio_tab"
    )
    st.markdown("</div>", unsafe_allow_html=True)

이 코드는:

배경색, 폰트, 패딩, 선택 시 색상 강조 등을 적용해서 진짜 탭처럼 보이게 해줍니다.

선택된 항목 강조 색도 #1976D2처럼 당신의 대시보드 색감에 맞게 지정 가능.



---

2. 더 고급스럽게 - 선택된 탭에 그림자 효과 등 추가

원하시면 아래와 같은 스타일도 가능:

box-shadow: 0 2px 5px rgba(0,0,0,0.15);
transform: scale(1.02);
transition: all 0.2s ease-in-out;

선택된 radio 요소를 감싸는 <div>에 위 스타일을 적용하면, 애니메이션 있는 탭 느낌도 줄 수 있어요.


---

✅ 요약: 디자인 개선 전략

요소	적용 예시

폰트 & 패딩	padding: 10px 20px; font-weight: 500;
선택 강조	background-color, color, box-shadow
탭처럼 보이게	display: flex; justify-content: center; border-radius
애니메이션 효과	transition, transform, hover 효과



---
# 페이지 제목
st.title("📋 과제 대시보드")

# ✅ CSS 스타일 삽입: radio의 동그라미 제거 + 탭 스타일링
st.markdown("""
<style>
/* 라디오 버튼 숨기기 */
div[data-baseweb="radio"] input[type="radio"] {
    display: none;
}

/* 라벨 스타일링 */
div[data-baseweb="radio"] label {
    background-color: #f5f5f5;
    color: #333;
    border: 1px solid #ccc;
    padding: 10px 20px;
    margin: 4px;
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}

/* 선택된 라벨 강조 스타일 */
div[data-baseweb="radio"] input[type="radio"]:checked + label {
    background-color: #1976D2;
    color: white;
    font-weight: bold;
    border: 1px solid #1976D2;
    box-shadow: 0 2px 6px rgba(0,0,0,0.15);
}
</style>
""", unsafe_allow_html=True)

# ✅ 탭 UI: 빨간 동그라미 없는 radio 탭
selected_tab = st.radio(
    label="탭 선택",
    options=["📊 월별 정량 대시보드", "📝 회의록 기반 과제 현황"],
    horizontal=True,
    label_visibility="collapsed",
    key="main_tab"
)




✅ Streamlit 버튼 탭 + 사이드바 분기 예제 (정량/회의록)

import streamlit as st import pandas as pd

예시 데이터

sample_df = pd.DataFrame({ "월": ["2025-03", "2025-04", "2025-05"], "부서": ["TCAD", "설계", "공정"], "팀": ["A", "B", "C"], "과제명": ["과제1", "과제2", "과제3"], "회의일": ["2025-05-01", "2025-05-08", "2025-05-10"], })

1. 세션 상태 초기화

if "active_tab" not in st.session_state: st.session_state.active_tab = "정량"

2. 탭 버튼 UI

col1, col2 = st.columns(2) with col1: if st.button("📊 정량 대시보드", type="primary" if st.session_state.active_tab == "정량" else "secondary"): st.session_state.active_tab = "정량" with col2: if st.button("📝 회의록 대시보드", type="primary" if st.session_state.active_tab == "회의록" else "secondary"): st.session_state.active_tab = "회의록"

st.markdown("---")

3. 탭에 따라 사이드바 분기

with st.sidebar: if st.session_state.active_tab == "정량": st.header("📅 월 필터") selected_month = st.selectbox("월 선택", sorted(sample_df["월"].unique()), key="month_tab1") elif st.session_state.active_tab == "회의록": st.header("🗂 회의록 필터") selected_category = st.radio("과제 구분", ["중점과제", "일반과제"], horizontal=True) selected_dept = st.selectbox("부서 선택", ["전체"] + sorted(sample_df["부서"].unique())) selected_team = st.selectbox("팀 선택", ["전체"] + sorted(sample_df["팀"].unique())) selected_tasks = st.multiselect("과제 선택", sorted(sample_df["과제명"].unique())) show_all = st.checkbox("📆 전체 회의 보기", value=False)

4. 본문 영역 분기

if st.session_state.active_tab == "정량": st.subheader(f"📊 [{selected_month}] 정량 대시보드") # 여기에 KPI 및 진행률 그래프 삽입 가능 else: st.subheader(f"📝 회의록 대시보드 - {selected_category}") st.write(f"선택된 부서: {selected_dept}, 팀: {selected_team}") st.write(f"과제 선택: {selected_tasks if selected_tasks else '전체'}") st.write("회의 흐름 보기:", "전체" if show_all else "최신 회의만")


완료했습니다!
지금 열려 있는 코드는 다음 기능을 하나의 깔끔한 구조로 통합했습니다:

✅ 포함된 기능 

버튼 기반 탭 UI (정량 / 회의록)

session_state.active_tab을 기준으로 선택 상태 유지 

탭별 사이드바 분기

정량 탭: 월 필터만 표시 회의록 탭: 과제 구분, 부서, 팀, 과제, 전체 흐름 보기 

본문 내용도 탭에 따라 전환

조건문으로 정량/회의록 각각 처리 🔧 다음에 할 수 있는 확장 회의록 탭에서 CSV 파일 로딩 → selected_category에 따라 동적으로 변경 선택된 과제별 회의 요약 시각화 KPI 바 차트, 중요/일반 미달성 요약 등 정량 대시보드 연결 
 
